name: Twitch Bot Build and Deploy

on:
  push:
    branches:
      - 'main'
    paths:
      - 'cli/twitch/**'
      - 'twitch/**'
      - 'ai/twitchchat/**'
      - 'database/**'
      - 'logging/**'
      - 'types/**'
      - 'go.mod'
      - 'go.sum'
  workflow_dispatch:
  pull_request:
    branches:
      - 'main'
    paths:
      - 'cli/twitch/**'
      - 'twitch/**'
      - 'ai/twitchchat/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/twitch

jobs:
  twitch-docker-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: cli/twitch/twitchBot.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

  deploy-twitch:
    needs: twitch-docker-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install 1Password CLI
        uses: 1password/install-cli-action@v1

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config
          kubectl config current-context

      - name: Configure 1Password service account
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
        run: |
          op --version
          # Test 1Password access
          op vault list

      - name: Deploy Twitch bot with Helm
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
        run: |
          # Update image tag in values
          export IMAGE_TAG="${{ needs.twitch-docker-build.outputs.image-tag }}"
          export SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          
          # Deploy using our script
          chmod +x ./deploy.sh
          ./deploy.sh deploy

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/pedro-twitch -n pedro-bots --timeout=300s
          kubectl get pods -n pedro-bots -l "app.kubernetes.io/component=twitch"